#------
# DATA |
#------
set.seed(11101)
x <- round(runif(1000), 2)
y <- round(runif(1000), 2)
c <- ifelse(x + y >= 1 & runif(1000) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
#------
# DATA |
#------
set.seed(11101)
x <- round(runif(1000), 2)
y <- round(runif(1000), 2)
c <- ifelse(x + y >= 1 & runif(1000) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
#------
# DATA |
#------
set.seed(11101)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
#------
# DATA |
#------
set.seed(11101)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# DATA |
#------
set.seed(11101)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
set.seed(11101)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
set.seed(1101011)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
data[,1:80]
data[:,1:80]
data[1:80]
data[1:80,]
data.train <- data[1:80, ]
data.test <- data[81:100, ]
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# DATA |
#------
set.seed(1101011)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:80, ]
data.test <- data[81:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:80, ]
data.test <- data[81:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/3, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:80, ]
data.test <- data[81:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
giniPred <- predict(giniTree, newdata = data.test)
giniPred
table(data.test$c, giniPred)
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 0.4, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
giniPred <- predict(giniTree, newdata = data.test, type = "class")
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
table(data.test$c, giniPred)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 3/4, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
infoPred <- predict(infoTree, newdata = data.test, type = "class")
table(data.test$c, infoPred)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 0, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
infoPred <- predict(infoTree, newdata = data.test, type = "class")
table(data.test$c, infoPred)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 3/4, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
rpart.plot::rpart.plot(giniTree)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
infoPred <- predict(infoTree, newdata = data.test, type = "class")
table(data.test$c, infoPred)
roc.curve(data.test$c, infoPred, plotit = T)
rpart.plot::roc.curve(data.test$c, infoPred, plotit = T)
rpart.plot::rpart.roc.curve(data.test$c, infoPred, plotit = T)
?roc.curve
infoConfMat <- table(data.test$c, infoPred)
infoCM <- table(data.test$c, infoPred)
infoCM[1,1]
infoCM[1,2]
infoAcc <- (infoCM[1, 1] + infoCM[2, 2])/(length(infoPred))
infoAcc
giniPred <- predict(giniTree, newdata = data.test, type = "class")
table(data.test$c, giniPred)
giniCM <- table(data.test$c, giniPred)
giniAcc <- (giniCM[1, 1] + giniCM[2, 2])/(length(giniPred))
giniAcc
pacman::p_load(rpart, caret)                          # pre-load packages
confusionMatrix(data.test$c, infoPred)
infoPred
data.test$c
as.factor(data.test$c)
confusionMatrix(as.factor(data.test$c), infoPred)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
giniPred <- predict(giniTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), giniPred)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
infoPred <- predict(infoTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), infoPred)
prop.table(data.train$c)
prop.table(as.factor(data.train$c))
prop.table(table(data.train$c))
barplot(prop.table(table(data.train$c)))
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"))
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1))
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
xlab = c(1,2))
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
barlab = c(1,2))
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 3/4, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 0, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
barplot(prop.table(table(data.train$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 0, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
barplot(prop.table(table(data$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 1/2, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
barplot(prop.table(table(data$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 3/4, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
barplot(prop.table(table(data$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# DATA |
#------
set.seed(1101001)
x <- round(runif(100), 2)
y <- round(runif(100), 2)
c <- ifelse(x + y >= 1 & runif(100) > 3/4, "red3", "steelblue1")
data <- data.frame(x, y, c)
plot(x, y, col = c, pch = 19)
barplot(prop.table(table(data$c)),
col = c("red3", "steelblue1"),
ylim = c(0,1),
names = c("red", "blue"))
data.train <- data[1:70, ]
data.test <- data[71:100, ]
plot(data.train$x, data.train$y, col = data.train$c, pch = 19)
plot(data.test$x, data.test$y, col = data.test$c, pch = 19)
#------
# GINI |
#------
giniTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini"))
rpart.plot::rpart.plot(giniTree)
giniPred <- predict(giniTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), giniPred)
#--------
# ENTRPY |
#--------
infoTree <- rpart(c ~ ., data = data.train, parms = list(split = "information"))
rpart.plot::rpart.plot(infoTree)
infoPred <- predict(infoTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), infoPred)
#-------
# PRIOR |
#-------
priorTree <- rpart(c ~ ., data = data.train, parms = list(split = "information",
prior = c(0.5, 0.5)))
rpart.plot::rpart.plot(priorTree)
rpart.plot::rpart.plot(priorTree)
priorPred <- predict(priorTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), priorPred)
#-------
# PRIOR |
#-------
priorTree <- rpart(c ~ ., data = data.train, parms = list(split = "gini",
prior = c(0.5, 0.5)))
rpart.plot::rpart.plot(priorTree)
priorPred <- predict(priorTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), priorPred)
#-------
# PRIOR |
#-------
priorTree <- rpart(c ~ ., data = data.train, parms = list(split = "information",
prior = c(0.5, 0.5)))
rpart.plot::rpart.plot(priorTree)
priorPred <- predict(priorTree, newdata = data.test, type = "class")
confusionMatrix(as.factor(data.test$c), priorPred)
